Brute Force: 
    A brute force algorithm is a technique for solving a problem by trying out every possible 
    solution until the correct one is found.

Greedy Algorithms: 
    A greedy algorithm decides what to do in each step, only based on the current situation, 
    without a thought of how the total problem looks like.

Divide and Conquer:
    Divide the problem into a number of subproblems that are smaller instances of the same problem.
    Conquer the subproblems by solving them recursively. If they are small enough, solve the subproblems
    as base cases.Combine the solutions to the subproblems into the solution for the original problem.
    best example merge sort.

Dynamic Programming:
    Dynamic Programming is a powerful problem-solving method that solves complex problems by 
    breaking them down into simpler subproblems and solving each subproblem only once, storing 
    their results using a memory-based data structure (like an array or a dictionary). 

Backtracking:
    backtracking algorithm fills an empty cell with a number from 1 to 9 and checks if it violates 
    the row, column, or box constraints.

Randomised Algorithms:
    algorithms that use randomness in their computations to achieve a desired outcome.

Recursion:
    A data structure known as the call stack stores recursive functions in memory.

Two Pointer Technique:
    The two-pointer technique is a strategy that can be used to solve certain types of problems, 
    particularly those that involve arrays or linked lists. This technique primarily involves using 
    two pointers, which navigate through the data structure in various ways, depending on the nature 
    of the problem.

Sliding Window Technique:
    The Sliding Window Technique is an algorithmic paradigm that manages a subset of items in a 
    collection of objects, like an array or list, by maintaining a range of elements observed, which 
    is referred to as the window.